"0",""
"0","## To plot total GHG emissions, we need to merge the two datasets"
"0","## This is one of the most common things you have to do in data coding"
"0","## But first I would aggregate both datasets into global totals, then join them together"
"0","## We do this by ""grouping"" and ""summarising"" the data"
"0",""
"0","plot_data_gases <- data_ghg %>%       # create a new variable called ""data_gases"", copied from ""data_ghg"""
"0","  group_by(year) %>%                  # choose ""years"" as our grouping variable"
"0","  summarise(CO2=sum(CO2,na.rm=TRUE),  # sum up the CO2 column by years, ignoring any missing values"
"0","            CH4=sum(CH4,na.rm=TRUE),  # sum up the CH4 column by years, ..."
"0","            N2O=sum(N2O,na.rm=TRUE),  # etc."
"0","            Fgas=sum(Fgas,na.rm=TRUE))"
"0",""
"0","# Note that ""summarise"" drops any other columns in the dataframe that were not grouped or summarised"
"0",""
"0",""
"0","## Now we want to do the same for the LULUCF data"
"0","## In this dataset we only want the ""mean"" column"
"0",""
"0","plot_data_lulucf <- data_lulucf %>% "
"0","  group_by(year) %>% "
"0","  summarise(CO2_LULUCF=sum(mean,na.rm=TRUE)) # sum up the mean column by years, but rename it to ""CO2_LULUCF"""
"0",""
"0",""
"0","## Now we can join the two datasets together"
"0","## Here we use a ""left_join"""
"0","## This function takes all rows from the data frame we specify as ""left"" (the first data frame)"
"0","## It then matches these rows to the data frame we specify as ""right"" (the second data frame)"
"0","## If there are no matches it returns NA in that row"
"0","## If there are additional rows in the ""right"" data frame, they are dropped"
"0","## We need to specify a matching column, to merge the data frames, here we use ""year"""
"0",""
"0","plot_data_gases <- left_join(plot_data_gases,plot_data_lulucf,by=""year"")"
"0",""
"0",""
"0","## Notice that only the years 1970-2019 are taken from ""data_lulucf""? The rest are not copied over"
"0","## This is what we want, but one could also use a ""full_join"" to keep all available rows in both frames"
"0",""
